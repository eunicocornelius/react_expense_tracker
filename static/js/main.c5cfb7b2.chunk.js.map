{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","props","title","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5cfb7b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = (props) => {\r\n    return (\r\n        <h2>\r\n            {props.title}\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// This is set to global since this is a small app. If the app is larger in scale, every object would have their own state(eg. shop, profile, etc)\r\n\r\nimport React, {  createContext, useReducer  } from 'react';\r\n\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\n// Initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return(<GlobalContext.Provider value={{\r\n        transactions:state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n        }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, {useContext} from 'react'\r\n\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc,item) => (acc+=item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n        <h4>Your Balance</h4>\r\n        <h1>${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\n\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const income = amounts\r\n    .filter(item => item>0)\r\n    .reduce((acc,item) => (acc+=item), 0)\r\n    .toFixed(2);\r\n    const expense = amounts\r\n    .filter(item => item<0)\r\n    .reduce((acc,item) => (acc+=item), 0) * -1\r\n    .toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expenses</h4>\r\n                <p className=\"money minus\">${expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\n\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus': 'plus'}>\r\n            {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)}className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\n\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport {Transaction} from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                <Transaction key={transaction.id} transaction={transaction}/>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n    const {addTransaction} = useContext(GlobalContext);\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n\r\n        const newTransaction = {\r\n\r\n            //not the best way to generate an id\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\"/>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount<br/>\r\n                    (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\"/>\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport {Header} from './components/Header'\nimport {Balance} from './components/Balance'\nimport {IncomeExpenses} from './components/IncomeExpenses'\nimport {TransactionList} from './components/TransactionList'\nimport {AddTransaction} from './components/AddTransaction'\n\nimport {GlobalProvider} from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header title=\"Expense Tracker\"/>\n      <div className=\"container\">\n        <Balance/>\n        <IncomeExpenses/>\n        <TransactionList/>\n        <AddTransaction/>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}